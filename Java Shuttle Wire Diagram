
//Eddy Vasile
//Shuttle Wire Frame Viewer
//This is a port of my MAC Think Pascal program from 1986

import java.awt.*;
import java.awt.event.*;
class DrawShuttle
{
   public static void main(String[] args)
   {
      DrawWindow dw = new DrawWindow("** Click inside the window to view the Shuttle Wire Frame **");
      dw.setSize(DrawWindow.SIZEX, DrawWindow.SIZEY);
      dw.setVisible(true);
   }
}
class DrawWindow extends Frame implements
   WindowListener,
   MouseListener,
   MouseMotionListener,
   ActionListener
{
   static final int SIZEX = 560;
   static final int SIZEY = 220;  
   int x1, y1, x2, y2;
   public DrawWindow(String s)
   {
      super(s);
      setBackground(Color.WHITE);
      setLayout(null);
      addMouseListener(this);
      addMouseMotionListener(this);
      addWindowListener(this);

   }
   static final int MAXA = 300, MAXV = 124, MAXE = 259;
   static int oxangle=0, oyangle=0, ozangle=0;
   double x=0,y=0,z=0,ch=0, sh=0, cp=0, sp=0, cb=0, sb=0, xv=0, yv=0, zv=0, x3=0, y3=0, z3=0, am=0, 
          bm=0, cm=0, dm=0, em=0, fm=0, gm=0, hm=0, im=0, d=120, p=0, b=0, h=0, u=0, vc=0, u1=0, v1=0;
   double [][]v=new double[MAXA][3];
   double []e  =new double[MAXA];
   int data[]=
       {0,-2,46,2,-3,46,2,-5,46,2,-7,46,0,-7,46,-2,-7,46,-2,-5,46,-2,-3,46,0,-1,43,3,-2,43,4,
       -5,43,3,-7,43,0,-8,43,-3,-7,43,-4,-5,43,-3,-2,43,0,2,38,5,0,38,6,-4,38,4,-8,38,0,-9,
       38,-4,-8,38,-6,-4,38,-5,0,38,0,4,33,5,1,33,6,-5,33,4,-9,33,0,-10,33,-4,-9,33,-6,-5,33,
       -5,1,33,0,8,26,4,7,26,8,2,26,8,-7,26,0,-10,26,-8,-7,26,-8,2,26,-4,7,26,0,8,22,4,8,22,
       8,3,22,8,-8,22,0,-10,22,-8,-8,22,-8,3,22,-4,8,22,0,8,14,5,7,14,8,4,14,8,-9,14,0,-10,14,
       -8,-9,14,-8,4,14,-5,7,14,0,8,4,5,7,4,8,4,4,8,-9,4,0,-10,4,-8,-9,4,-8,4,4,-5,7,4,0,8,-12,
       5,7,-12,8,4,-12,8,-9,-12,0,-10,-12,-8,-9,-12,-8,4,-12,-5,7,-12,0,8,-27,5,7,-27,8,4,-27,
       8,-9,-27,0,-10,-27,-8,-9,-27,-8,4,-27,-5,7,-27,0,8,-36,5,7,-36,8,4,-36,8,-9,-36,0,-10,
       -36,-8,-9,-36,-8,4,-36,-5,7,-36,0,9,-43,2,9,-43,9,2,-43,9,-10,-43,0,-11,-43,-9,-10,-43,
       -9,2,-43,-2,9,-43,0,10,-48,2,9,-48,9,2,-48,10,-10,-48,0,-10,-48,-10,-10,-48,-9,2,-48,
       -2,9,-48,9,-9,21,15,-9,-16,35,-10,-36,35,-10,-40,-9,-9,21,-15,-9,-16,-35,-10,-36,-35,
       -10,-40,0,13,-37,0,33,-60,0,33,-69,0,14,-60,6,11,-43,6,11,-48,11,5,-43,11,5,-48,-6,11,
       -43,-6,11,-48,-11,5,-43,-11,5,-48,-1,2,3,4,5,6,7,8,1,-9,10,11,12,13,14,15,16,9,-17,18,
       19,20,21,22,23,24,17,-25,26,27,28,29,30,31,32,25,-33,34,35,36,37,38,39,40,33,-41,42,43,
       44,45,46,47,48,41,-49,50,51,52,53,54,55,56,49,-57,58,59,60,61,62,63,64,57,-65,66,67,68,
       69,70,71,72,65,-73,74,75,76,77,78,79,80,73,-81,82,83,84,85,86,87,88,81,-89,90,91,92,93,
       94,95,96,89,-97,98,99,100,101,102,103,104,97,-1,9,17,25,33,41,49,57,65,73,81,89,97,-2,
       10,18,26,34,42,50,58,66,74,82,90,98,-3,11,19,27,35,43,51,59,67,75,83,91,99,-4,12,20,28,
       36,44,52,60,68,76,84,92,100,-5,13,21,29,37,45,53,61,69,77,85,93,101,-6,14,22,30,38,46,
       54,62,70,78,86,94,102,-7,15,23,31,39,47,55,63,71,79,87,95,103,-8,16,24,32,40,48,56,64,
       72,80,88,96,104,-44,105,106,107,108,92,-46,109,110,111,112,94,-81,113,114,115,116,89,
       -82,117,118,-83,119,120,-87,121,122,-88,123,124,-117,119,-121,123,-118,120,-122,124};

public void actionPerformed(ActionEvent event) {
   Object source = event.getActionCommand();
}
public   void mousePressed(MouseEvent me) { 
   Graphics g = getGraphics();
   g.setColor(Color.white);
   g.fillRect(0,0,510,200);
   g.setColor(Color.black);
   g.drawString("Click here>>>",450,190);

}
public   void mouseEntered(MouseEvent me) { }
public   void mouseExited(MouseEvent me)  { }
public   void mouseMoved(MouseEvent me)   { }
public   void mouseClicked(MouseEvent me) {
   Graphics g = getGraphics();
   int position=0;
   for (int i = 0; i <MAXV; i++) {
      for (int j= 0; j<3; j++) {
         v[i][j]= data[position++] * 0.12;
      } 
   }
   for (int i=0;i<MAXE;i++) {
        e[i]=data[position++];
   }
   p=6.28 * oxangle / 255 - Math.PI;
   b=6.28 * ozangle / 255;
   h=6.28 * oyangle / 255;
   ch=Math.cos(h);
   sh=Math.sin(h);
   cp=Math.cos(p);
   sp=Math.sin(p);
   cb=Math.cos(b);
   sb=Math.sin(b);
   am=cb * ch - sh * sp * sb;
   bm= -cb * sh - sp * ch * sb;
   cm=cp * sb;
   dm=sh * cp;
   em=cp * ch;
   fm=sp;
   gm=-ch * sb - sh * sp * cb;
   hm=sh * sb - sp * ch * cb;
   im=cp * cb;
   xv=-d * cp * sh;
   yv=-d * cp * ch;
   zv=-d * sp;
   for (int ec=0;ec<MAXE;ec++) {
      x=v[Math.abs((int) Math.round(e[ec]))][0];
      y=v[Math.abs((int) Math.round(e[ec]))][1];
      z=v[Math.abs((int) Math.round(e[ec]))][2];
      x= x - xv;
      y= y - yv;
      z= z - zv;
      x3=am * x + bm * y + cm * z;
      y3=dm * x + em * y + fm * z;
      z3=gm * x + hm * y + im * z;
      u=135 + 13.5 * d * x3 / y3;
      vc=80 - 11.5 * d * z3 / y3;
      x1=(int)Math.round(u1) * 2 + 40;
      y1=(int)Math.round(v1) + 50;
      x2=(int)Math.round(u) * 2 + 40;
      y2=(int)Math.round(vc) + 50; 
      if (e[ec] > 0) {
         g.setColor(Color.BLACK);
         g.drawLine(x1,y1,x2,y2);
      }
      u1=u;
      v1=vc;
   }
   oxangle+=10;
   oyangle+=10;
   ozangle+=10;
}
  public void mouseDragged(MouseEvent me)       {}
  public void mouseReleased(MouseEvent me)      {}
  public void windowClosed(WindowEvent we)      {}
  public void windowDeiconified(WindowEvent we) {}
  public void windowIconified(WindowEvent we)   {}
  public void windowActivated(WindowEvent we)   {}
  public void windowDeactivated(WindowEvent we) {}
  public void windowOpened(WindowEvent we)      {}
  public void windowClosing(WindowEvent we)     {System.exit(0);}
}

